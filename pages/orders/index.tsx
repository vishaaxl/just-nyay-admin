import OrdersTable from "components/Tables/OrdersTable";
import { db } from "firebase.config";
import {
  collection,
  DocumentData,
  getDocs,
  query,
  orderBy,
} from "firebase/firestore";
import { GetServerSideProps } from "next";
import Head from "next/head";

import styled from "styled-components";
import { generateUid } from "utils/main";

interface Props {
  orders: string;
}

const CardsWrapper = styled.div`
  display: grid;
  gap: 1rem;

  @media (min-width: 425px) {
    grid-template-columns: repeat(2, 1fr);
  }
`;

const orderColumn = [
  {
    Header: "Order ID",
    accessor: "uid" as const, // accessor is the "key" in the data
  },
  {
    Header: "Plan",
    accessor: "plan" as const, // accessor is the "key" in the data
  },
  {
    Header: "Language",
    accessor: "language" as const,
  },
  {
    Header: "Type",
    accessor: "problemType" as const,
  },
  {
    Header: "Status",
    accessor: "status" as const,
  },
];

export default function Home({ orders }: Props) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <OrdersTable
        tableData={JSON.parse(orders).map((order: any) => ({
          ...order,
          uid: generateUid(order.createdAt.seconds * 1000, order.id),
        }))}
        tableColumns={orderColumn}
        tableName="All Orders"
        path="orders"
      />
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const ordersRef = query(
    collection(db, "orders"),
    orderBy("createdAt", "desc")
  );

  const ordersSnap = await getDocs(ordersRef);

  const orders: DocumentData[] = [];

  ordersSnap.forEach((doc) => {
    orders.push({
      id: doc.id,
      ...doc.data(),
    });
  });

  return {
    props: {
      orders: JSON.stringify(orders),
    },
  };
};
